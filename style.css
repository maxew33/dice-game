@charset "UTF-8";
* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  --border-radius: 1vmin;
  --face-size: 15vmin;
  --duration: 2s;
  --point-size: 2.5vmin;
  --point-position: 2.5vmin;
}

body {
  min-height: 100vh;
  background: #222;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: space-evenly;
}

.dice-container {
  position: relative;
  width: var(--face-size);
  aspect-ratio: 1;
  cursor: pointer;
}

.padlock {
  position: absolute;
  top: 0;
  left: 0;
  width: var(--face-size);
  aspect-ratio: 1;
  opacity: 0;
  border-radius: var(--border-radius);
  background: rgba(0, 0, 0, 0.15);
  transition: opacity 0.25s ease-in-out;
}
.padlock::after {
  content: "ðŸ”’";
  position: absolute;
  top: 0.5vmin;
  left: 0.5vmin;
  font-size: 1.5vmin;
  transform: rotate(-15deg);
}

.locked ~ .padlock {
  opacity: 1;
}

.dice {
  position: relative;
  width: var(--face-size);
  aspect-ratio: 1;
  border-radius: var(--border-radius);
  transform-style: preserve-3d;
  transform-origin: 50% 50% calc(var(--face-size) * -0.5);
  transform: rotateX(180deg) rotateY(180deg);
  transition: transform var(--duration) ease-in-out;
}

.face {
  position: absolute;
  background: radial-gradient(circle at center, #eee, #ccc);
  width: var(--face-size);
  aspect-ratio: 1;
  border-radius: var(--border-radius);
  transform: rotateX(0deg) rotateY(180deg);
  transform-origin: 50% 50% calc(var(--face-size) * -0.5);
  /*backface-visibility: hidden;*/
}

.face:nth-child(1) {
  transform: rotateY(0deg);
}

.face:nth-child(2) {
  transform: rotateY(90deg);
}

.face:nth-child(3) {
  transform: rotateY(180deg);
}

.face:nth-child(4) {
  transform: rotateY(270deg);
}

.face:nth-child(5) {
  transform: rotateX(90deg);
}

.face:nth-child(6) {
  transform: rotateX(270deg);
}

.point {
  position: absolute;
  width: var(--point-size);
  aspect-ratio: 1;
  border-radius: 100%;
  align-self: center;
  justify-self: center;
  background: #444;
  box-shadow: inset 5px 0 10px #222;
}

.point-top {
  top: var(--point-position);
}

.point-middle {
  top: calc((var(--face-size) - var(--point-size)) / 2);
}

.point-bottom {
  bottom: var(--point-position);
}

.point-left {
  left: var(--point-position);
}

.point-center {
  left: calc((var(--face-size) - var(--point-size)) / 2);
}

.point-right {
  right: var(--point-position);
}

.roll-btn {
  padding: 1vmin;
  border: none;
  border-radius: 1vmin;
  cursor: pointer;
}/*# sourceMappingURL=style.css.map */